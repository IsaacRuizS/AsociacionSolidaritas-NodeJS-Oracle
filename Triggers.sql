-- Auditoría

CREATE TABLE AUD_DELETE_LOG (
    AUDIT_ID      NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TABLE_NAME    VARCHAR2(30)      NOT NULL,
    PK_NAME       VARCHAR2(30)      NOT NULL,
    PK_VALUE      VARCHAR2(100)     NOT NULL,
    DETAILS       VARCHAR2(4000),
    USERNAME      VARCHAR2(128)     DEFAULT USER,
    OS_USER       VARCHAR2(128)     DEFAULT SYS_CONTEXT('USERENV','OS_USER'),
    IP_ADDRESS    VARCHAR2(64)      DEFAULT SYS_CONTEXT('USERENV','IP_ADDRESS'),
    HOST          VARCHAR2(128)     DEFAULT SYS_CONTEXT('USERENV','HOST'),
    MODULE        VARCHAR2(128)     DEFAULT SYS_CONTEXT('USERENV','MODULE'),
    DELETED_AT    DATE              DEFAULT SYSDATE
);


-- ASSOCIATE
CREATE OR REPLACE TRIGGER TRG_ASSOCIATE_AD
AFTER DELETE ON ASSOCIATE
FOR EACH ROW
BEGIN
  INSERT INTO AUD_DELETE_LOG (TABLE_NAME, PK_NAME, PK_VALUE, DETAILS)
  VALUES ('ASSOCIATE', 'ASSOCIATE_ID', TO_CHAR(:OLD.ASSOCIATE_ID),
          'NATIONAL_ID='||:OLD.NATIONAL_ID||'; EMAIL='||:OLD.EMAIL);
END;
/



-- BENEFICIARY
CREATE OR REPLACE TRIGGER TRG_BENEFICIARY_AD
AFTER DELETE ON BENEFICIARY
FOR EACH ROW
BEGIN
  INSERT INTO AUD_DELETE_LOG (TABLE_NAME, PK_NAME, PK_VALUE, DETAILS)
  VALUES ('BENEFICIARY', 'BENEFICIARY_ID', TO_CHAR(:OLD.BENEFICIARY_ID),
          'ASSOCIATE_ID='||:OLD.ASSOCIATE_ID||'; RELATIONSHIP='||:OLD.RELATIONSHIP);
END;
/


-- CREDIT
CREATE OR REPLACE TRIGGER TRG_CREDIT_AD
AFTER DELETE ON CREDIT
FOR EACH ROW
BEGIN
  INSERT INTO AUD_DELETE_LOG (TABLE_NAME, PK_NAME, PK_VALUE, DETAILS)
  VALUES ('CREDIT', 'CREDIT_ID', TO_CHAR(:OLD.CREDIT_ID),
          'ASSOCIATE_ID='||:OLD.ASSOCIATE_ID||'; NAME='||:OLD.NAME);
END;
/



-- SAVING
CREATE OR REPLACE TRIGGER TRG_SAVING_AD
AFTER DELETE ON SAVING
FOR EACH ROW
BEGIN
  INSERT INTO AUD_DELETE_LOG (TABLE_NAME, PK_NAME, PK_VALUE, DETAILS)
  VALUES ('SAVING', 'SAVING_ID', TO_CHAR(:OLD.SAVING_ID),
          'ASSOCIATE_ID='||:OLD.ASSOCIATE_ID||'; NAME='||:OLD.NAME);
END;
/


-- CREDIT_CONTRIBUTION
CREATE OR REPLACE TRIGGER TRG_CREDIT_CONTR_AD
AFTER DELETE ON CREDIT_CONTRIBUTION
FOR EACH ROW
BEGIN
  INSERT INTO AUD_DELETE_LOG (TABLE_NAME, PK_NAME, PK_VALUE, DETAILS)
  VALUES ('CREDIT_CONTRIBUTION', 'CONTRIBUTION_ID', TO_CHAR(:OLD.CONTRIBUTION_ID),
          'CREDIT_ID='||:OLD.CREDIT_ID||'; AMOUNT='||TO_CHAR(:OLD.AMOUNT));
END;
/




--------------------------------------------------------------------------------

-- Inserts para pruebas

-- CATÁLOGOS BÁSICOS
INSERT INTO ROLE (NAME, DESCRIPTION) VALUES ('ASOCIADO', 'ROL BÁSICO');
INSERT INTO LABOR_CONDITION (DESCRIPTION) VALUES ('FIJO');
INSERT INTO CREDIT_STATUS (DESCRIPTION) VALUES ('APROBADO');
INSERT INTO SAVING_TYPE (NAME, DESCRIPTION) VALUES ('NAVIDEÑO','AHORRO NAVIDEÑO');
COMMIT;

-- ASSOCIATE (usa ROLE_ID y LABORCONDITION_ID)
INSERT INTO ASSOCIATE (
  ROLE_ID, LABORCONDITION_ID, NATIONAL_ID, FIRST_NAME, LAST_NAME_1, LAST_NAME_2,
  PROVINCE, CANTON, DISTRICT, ENTRY_DATE, GROSS_SALARY, EMAIL, PHONE
) VALUES (
  (SELECT ROLE_ID FROM ROLE WHERE NAME='ASOCIADO'),
  (SELECT CONDITION_ID FROM LABOR_CONDITION WHERE DESCRIPTION='FIJO'),
  '123456789', 'JUAN', 'PEREZ', 'GARCIA',
  'SAN JOSE','CENTRAL','CARMEN', DATE '2024-01-01', 800000, 'JUAN@MAIL.COM', '8888-8888'
);
COMMIT;

-- BENEFICIARY (depende de ASSOCIATE)
INSERT INTO BENEFICIARY (
  ASSOCIATE_ID, FIRST_NAME, LAST_NAME_1, LAST_NAME_2, RELATIONSHIP, PERCENTAGE, EMAIL, PHONE
) VALUES (
  (SELECT ASSOCIATE_ID FROM ASSOCIATE WHERE NATIONAL_ID='123456789'),
  'MARIA','PEREZ','GARCIA','HIJA',50,'MARIA@MAIL.COM','7777-7777'
);
COMMIT;

-- SAVING (depende de ASSOCIATE y SAVING_TYPE)
INSERT INTO SAVING (
  ASSOCIATE_ID, NAME, CURRENT_BALANCE, MONTHLY_AMOUNT, INTEREST_RATE, DEADLINE, GENERATED_INTEREST, SAVING_TYPE_ID
) VALUES (
  (SELECT ASSOCIATE_ID FROM ASSOCIATE WHERE NATIONAL_ID='123456789'),
  'AHORRO NAVIDAD', 100000, 20000, 5.5, DATE '2024-12-15', 0,
  (SELECT SAVING_TYPE_ID FROM SAVING_TYPE WHERE NAME='NAVIDEÑO')
);
COMMIT;

-- CREDIT (depende de ASSOCIATE y CREDIT_STATUS)
INSERT INTO CREDIT (
  ASSOCIATE_ID, NAME, REQUESTED_AMOUNT, TERM_MONTHS, CURRENT_BALANCE,
  MONTHLY_PAYMENT, INTEREST_RATE, REQUEST_DATE, CREDIT_STATUS_ID
) VALUES (
  (SELECT ASSOCIATE_ID FROM ASSOCIATE WHERE NATIONAL_ID='123456789'),
  'CREDITO PERSONAL', 1500000, 24, 1500000, 70000, 18.0, DATE '2024-02-01',
  (SELECT STATUS_ID FROM CREDIT_STATUS WHERE DESCRIPTION='APROBADO')
);
COMMIT;

-- CREDIT_CONTRIBUTION (depende de CREDIT)
INSERT INTO CREDIT_CONTRIBUTION (CREDIT_ID, AMOUNT, DATE_CREDIT_CONTRIBUTION)
VALUES (
  (SELECT CREDIT_ID FROM CREDIT WHERE NAME='CREDITO PERSONAL'),
  70000, DATE '2024-03-01'
);
COMMIT;

--------------------------------------------------------------------------------

-- Probar los triggers

-- DISPARAR TRIGGERS CON DELETES

-- CREDIT_CONTRIBUTION
DELETE FROM CREDIT_CONTRIBUTION
WHERE CREDIT_ID = (SELECT CREDIT_ID FROM CREDIT WHERE NAME='CREDITO PERSONAL');
COMMIT;

-- SAVING
DELETE FROM SAVING
WHERE NAME = 'AHORRO NAVIDAD';
COMMIT;

-- CREDIT
DELETE FROM CREDIT
WHERE NAME = 'CREDITO PERSONAL';
COMMIT;

-- BENEFICIARY
DELETE FROM BENEFICIARY
WHERE EMAIL = 'MARIA@MAIL.COM';
COMMIT;

-- ASSOCIATE (al final por FKs)
DELETE FROM ASSOCIATE
WHERE NATIONAL_ID = '123456789';
COMMIT;

-- CONSULTAR AUDITORÍA
SELECT AUDIT_ID, TABLE_NAME, PK_NAME, PK_VALUE, DETAILS, USERNAME, DELETED_AT
FROM AUD_DELETE_LOG
ORDER BY AUDIT_ID;


