CREATE USER SolidarityAssociation IDENTIFIED BY AsoSolidarista;
GRANT CONNECT, RESOURCE TO SolidarityAssociation;

CREATE TABLESPACE USERS
DATAFILE 'D:\Apps\oradata\XE\XEPDB1\TS_USERS_01.DBF' SIZE 64M AUTOEXTEND ON NEXT 64M MAXSIZE UNLIMITED
BLOCKSIZE 8K
EXTENT MANAGEMENT LOCAL AUTOALLOCATE
SEGMENT SPACE MANAGEMENT AUTO 
LOGGING;

ALTER USER SolidarityAssociation DEFAULT TABLESPACE USERS;

-- Permitir crear vistas
GRANT CREATE VIEW TO SolidarityAssociation;

-- Permitir crear procedimientos almacenados
GRANT CREATE PROCEDURE TO SolidarityAssociation;

------------------------------------------------------------------------------------------------------------------

CREATE TABLE LABOR_CONDITION (
    CONDITION_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DESCRIPTION    VARCHAR2(100)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE ROLE (
    ROLE_ID       NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME          VARCHAR2(50),
    DESCRIPTION   VARCHAR2(100)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE CREDIT_STATUS (
    STATUS_ID    NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    DESCRIPTION  VARCHAR2(100)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE SAVING_TYPE (
    SAVING_TYPE_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME            VARCHAR2(50),
    DESCRIPTION     VARCHAR2(100)
);

------------------------------------------------------------------------------------------------------------------
CREATE TABLE ASSOCIATE (
    ASSOCIATE_ID         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ROLE_ID              NUMBER,
    LABORCONDITION_ID    NUMBER,
    NATIONAL_ID          VARCHAR2(20),
    FIRST_NAME           VARCHAR2(50),
    LAST_NAME_1          VARCHAR2(50),
    LAST_NAME_2          VARCHAR2(50),
    PROVINCE             VARCHAR2(50),
    CANTON               VARCHAR2(50),
    DISTRICT             VARCHAR2(50),
    BIRTH_DATE           DATE,
    MARITAL_STATUS       VARCHAR2(20),
    GENDER               VARCHAR2(10),
    PROFESSION           VARCHAR2(50),
    ENTRY_DATE           DATE,
    GROSS_SALARY         NUMBER(10,2),
    COMPANY              VARCHAR2(100),
    EMAIL                VARCHAR2(100),
    PASSWORD             VARCHAR2(100),
    PHONE                VARCHAR2(20),

    CONSTRAINT FK_ROLE FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID),
    CONSTRAINT FK_LABOR_CONDITION FOREIGN KEY (LABORCONDITION_ID) REFERENCES LABOR_CONDITION(CONDITION_ID)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE BENEFICIARY (
    BENEFICIARY_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSOCIATE_ID     NUMBER,
    FIRST_NAME       VARCHAR2(50),
    LAST_NAME_1      VARCHAR2(50),
    LAST_NAME_2      VARCHAR2(50),
    NATIONAL_ID      VARCHAR2(20),
    GENDER           VARCHAR2(10),
    RELATIONSHIP     VARCHAR2(50),
    PERCENTAGE       NUMBER(5,2),
    PROVINCE         VARCHAR2(50),
    CANTON           VARCHAR2(50),
    DISTRICT         VARCHAR2(50),
    EMAIL            VARCHAR2(100), --Cambios en el commit
    PHONE            VARCHAR2(20),

    CONSTRAINT FK_BENEFICIARY_ASSOCIATE FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATE(ASSOCIATE_ID)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE CREDIT (
    CREDIT_ID          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSOCIATE_ID       NUMBER,
    NAME               VARCHAR2(100),
    REQUESTED_AMOUNT   NUMBER(10,2),
    TERM_MONTHS        NUMBER,
    CURRENT_BALANCE    NUMBER(10,2),
    MONTHLY_PAYMENT    NUMBER(10,2),
    INTEREST_RATE      NUMBER(5,2),
    REQUEST_DATE       DATE,
    APPROVAL_DATE      DATE,
    CREDIT_STATUS_ID   NUMBER,

    CONSTRAINT FK_CREDIT_ASSOCIATE FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATE(ASSOCIATE_ID),
    CONSTRAINT FK_CREDIT_STATUS FOREIGN KEY (CREDIT_STATUS_ID) REFERENCES CREDIT_STATUS(STATUS_ID)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE CREDIT_CONTRIBUTION (
    CONTRIBUTION_ID   NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    CREDIT_ID         NUMBER,
    AMOUNT            NUMBER(10,2),
    DATE_CREDIT_CONTRIBUTION              DATE,

    CONSTRAINT FK_CREDIT_CONTRIBUTION_CREDIT FOREIGN KEY (CREDIT_ID) REFERENCES CREDIT(CREDIT_ID)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE SAVING (
    SAVING_ID           NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ASSOCIATE_ID        NUMBER,
    NAME                VARCHAR2(100),
    CURRENT_BALANCE     NUMBER(10,2),
    MONTHLY_AMOUNT      NUMBER(10,2),
    GENERATED_INTEREST  NUMBER(10,2),
    INTEREST_RATE       NUMBER(5,2),
    SAVING_TYPE_ID      NUMBER,
    DEADLINE            DATE,

    CONSTRAINT FK_SAVING_ASSOCIATE FOREIGN KEY (ASSOCIATE_ID) REFERENCES ASSOCIATE(ASSOCIATE_ID),
    CONSTRAINT FK_SAVING_TYPE FOREIGN KEY (SAVING_TYPE_ID) REFERENCES SAVING_TYPE(SAVING_TYPE_ID)
);
    

------------------------------------------------------------------------------------------------------------------

CREATE TABLE SAVING_CONTRIBUTION (
    CONTRIBUTION_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SAVING_ID        NUMBER,
    AMOUNT           NUMBER(10,2),
    DATE_SAVING_CONTRIBUTION            DATE,

    CONSTRAINT FK_SAVING_CONTRIBUTION FOREIGN KEY (SAVING_ID) REFERENCES SAVING(SAVING_ID)
);

------------------------------------------------------------------------------------------------------------------

CREATE TABLE WITHDRAWAL (
    WITHDRAWAL_ID  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SAVING_ID      NUMBER,
    AMOUNT         NUMBER(10,2),
    DATE_WITHDRAWAL           DATE,

    CONSTRAINT FK_WITHDRAWAL_SAVING FOREIGN KEY (SAVING_ID) REFERENCES SAVING(SAVING_ID)
);
